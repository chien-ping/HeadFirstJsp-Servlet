重導(redirect)

發生在客戶端。由客戶端重新發送請求。
伺服器回傳status code = 301的狀態碼，並有一Location標頭，提供URL值。瀏覽器收到301的狀態碼，會找Location標頭，取得新URL內容，
並以此URL發送新請求。瀏覽器的網址列會變成新的URL。

response.sendRedirect("URL String");

 1. 絕對URL: 完整URL路徑
 2. 相對URL:
 假設使用者原本得的路徑為 http://www.wickedlysmart.com/myApp/cool/bar.do
 a. 使用/開頭: 相對於Web Container root的URL
    sendEedirect("/foo/stuff.html");
    ==>http://www.wickedlysmart.com/foo/stuff.html
 b. 不使用/開頭: 相對於原始請求URL的相對路徑
    sendEedirect("foo/stuff.html");
    ==>http://www.wickedlysmart.com/myApp/cool/foo/stuff.html
    
    
    
    
    
 請求分派(request dispatch)
 
 發生在伺服器端。由伺服器上的其他元件繼續經手處理請求(通常屬於同一個Web 應用程式)。
 
 從ServletRequest取得requestDispatcher物件
 RequestDispatcher view = request.getRequestDispatcher("URL String");
 接受字串型態的參數，代表要接管元件的路徑，如果以"/"開頭，會視為從這個"web"應用程式的根目錄開始算起，
 如果不是"/"開頭，會被視為"相對於原始的請求的相對路徑"
 
 
 從ServletContext取得requestDispatcher物件
 RequestDispatcher view = getServletContext()getRequestDispatcher("URL String");
 接受字串型態的參數，代表要接管元件的路徑，必須以"/"開頭
 
 
 view.forward(request, response);
 將控制權完全交出去
 
 view.include(request, response);
 要求其他元件幫忙處理請求，但不是將控制權完全交出去，而是暫時性的，控制權會回到原來的傳送者手上。
 
 
 如果在回應被確認(committed)後呼叫重導或請求分派會拋出IllegalStateException
    確認是指回應已經送出，也就是資料已經被沖入(flushed to)串流了
 
